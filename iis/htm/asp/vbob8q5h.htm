<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ClientCertificate</TITLE>
<SCRIPT LANGUAGE="JavaScript">
<!--
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
//-->
</script>
<SCRIPT LANGUAGE="VBScript">
<!--
Sub Window_OnLoad()
   Dim frmContents
   On Error Resume Next
   If Not Parent Is Nothing Then
      Set frmContents = Parent.Contents
      If Not frmContents Is Nothing Then
            frmContents.Window.TOCSynch_Click
      End If
   End If
End Sub
//--></SCRIPT><META NAME="DESCRIPTION" CONTENT="Internet Information Services reference information">
<META HTTP-EQUIV="PICS-Label" CONTENT='(PICS-1.1 "<http://www.rsac.org/ratingsv01.html>" l comment "RSACi North America Server" by "inet@microsoft.com <mailto:inet@microsoft.com>" r (n 0 s 0 v 0 l 0))'>
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="MS-IT-LOC" Content="Internet Information Services"> 
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H4><A NAME="_clientcertificate"></A>ClientCertificate</H4>

<P>The <B>ClientCertificate</B> collection retrieves the certification fields (specified in the X.509 standard) from a request issued by the Web browser.</P>

<P>If a Web browser uses the SSL3.0/PCT1 protocol (in other words, it uses a URL starting with https:// instead of http://) to connect to a server and the server requests certification, the browser sends the certification fields.</P>

<P>If no certificate is sent, the <B>ClientCertificate</B> collection returns EMPTY.</P>

<P>Before you can use the <B>ClientCertificate</B> collection, you must configure your Web server to request client certificates.</P>

<H6>Syntax</H6>

<P><B>Request.ClientCertificate(</B> <I>Key</I>[<I>SubField</I>] <B>)</B></P>

<P><B>&nbsp;</B></P>

<H6>Parameters</H6>

<DL>
<DT><I>Key</I></DT>

<DD>Specifies the name of the certification field to retrieve. A client certificate consists of the following fields.

<TABLE border=0 cellpadding=5 cols=2>

<TR VALIGN="top">
<TD class=blue width=22%><B>Value</B></TD>
<TD class=blue width=78%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%>Certificate</TD>
<TD width=78%>A string containing the binary stream of the entire certificate content in ASN.1 format.</TD>
</TR>

<TR VALIGN="top">
<TD width=22%>Flags</TD>
<TD width=78%>A set of flags that provide additional client certificate information. The following flags may be set:
<P><B>ceCertPresent</B>—A client certificate is present.</P>

<P><B>ceUnrecognizedIssuer</B>—The last certification in this chain is from an unknown issuer.</P>

<P><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;To use the preceding flags you must include the client-certificate include file in your ASP page. If you are using VBScript, include cervbs.inc. If you are using JScript, include cerjavas.inc. These files are installed in the \Inetpub\ASPSamp\Samples directory.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=22%>Issuer</TD>
<TD width=78%>A string that contains a list of subfield values containing information about the issuer of the certificate. If this value is specified without a <I>SubField</I>, the <B>ClientCertificate</B> collection returns a comma-separated list of subfields. For example, C=US, O=Verisign, and so on.</TD>
</TR>

<TR VALIGN="top">
<TD width=22%>SerialNumber</TD>
<TD width=78%>A string that contains the certification serial number as an ASCII representation of hexadecimal bytes separated by hyphens (-). For example, 04-67-F3-02.</TD>
</TR>

<TR VALIGN="top">
<TD width=22%>Subject</TD>
<TD width=78%>A string that contains a list of subfield values. The subfield values contain information about the subject of the certificate. If this value is specified without a <I>SubField</I>, the <B>ClientCertificate</B> collection returns a comma-separated list of subfields. For example, C=US, O=Msft, and so on.</TD>
</TR>

<TR VALIGN="top">
<TD width=22%>ValidFrom</TD>
<TD width=78%>A date specifying when the certificate becomes valid. This date follows VBScript format and varies with international settings. For example, in the U.S., 9/26/96 11:59:59 <SMALL>PM.</SMALL> The year value is displayed as a four-digit number.</TD>
</TR>

<TR VALIGN="top">
<TD width=22%>ValidUntil</TD>
<TD width=78%>A date specifying when the certificate expires. The year value is displayed as a four-digit number.</TD>
</TR>
</TABLE><BR>

<BR>
</DD>

<DT><I>SubField</I></DT>

<DD>An optional parameter you can use to a retrieve an individual field in either the Subject or Issuer keys. This parameter is added to the <I>Key </I>parameter as a suffix. For example, IssuerO or SubjectCN. The following table lists some common S<I>ubField</I> values.

<TABLE border=0 cellpadding=5 cols=2>

<TR VALIGN="top">
<TD class=blue width=18%><B>Value</B></TD>
<TD class=blue width=82%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=18%>C</TD>
<TD width=82%>Specifies the name of the country of origin. </TD>
</TR>

<TR VALIGN="top">
<TD width=18%>CN</TD>
<TD width=82%>Specifies the common name of the user. (This subfield is only used with the Subject key.)</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>GN</TD>
<TD width=82%>Specifies a given name.</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>I</TD>
<TD width=82%>Specifies a set of initials.</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>L</TD>
<TD width=82%>Specifies a locality.</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>O</TD>
<TD width=82%>Specifies the company or organization name. </TD>
</TR>

<TR VALIGN="top">
<TD width=18%>OU</TD>
<TD width=82%>Specifies the name of the organizational unit.</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>S</TD>
<TD width=82%>Specifies a state or province.</TD>
</TR>

<TR VALIGN="top">
<TD width=18%>T</TD>
<TD width=82%>Specifies the title of the person or organization.</TD>
</TR>
</TABLE><BR>

</DD>
</DL>

<P><I>SubField </I>values other than those listed in the preceding table can be identified by their ASN.1 identifier. The format of the ASN.1 identifier is a list of numbers separated by a period (.). For example, 3.56.7886.34.</P>

<H6>Remarks</H6>

<P>You can iterate through the keys of the <B>ClientCertificate</B> collection. This is demonstrated in the following example.</P>

<PRE><CODE>&lt;%
  For Each strKey in Request.ClientCertificate
    Response.Write strkey &amp; " = " &amp; Request.ClientCertificate(strkey) &amp; "&lt;BR&gt;")
  Next
%&gt;
 </CODE></PRE>

<H6>Example</H6>

<P>The following example uses the Subject key to test whether a client certificate has been presented.</P>

<PRE><CODE>&lt;%
  If Len(Request.ClientCertificate("Subject")) = 0
    Response.Write("No client certificate was presented")
  End if
%&gt;
 </CODE></PRE>

<P>The following example retrieves the common name of the company that issued the client certificate.</P>

<PRE><CODE>&lt;%= Request.ClientCertificate("IssuerCN") %&gt;
 </CODE></PRE>

<P>The following example checks the organization name of the subject of the client certification.</P>

<PRE><CODE>&lt;% 
  If (Request.ClientCertificate("Subject")="Msft")
    Response.Write("Good Choice!")
  End if
%&gt;
 </CODE></PRE>

<P>The following example displays the expiration date of the client certificate.</P>

<PRE><CODE>This certification will expire on 
&lt;%= Request.ClientCertificate("ValidUntil") %&gt;
 </CODE></PRE>

<P>The following example uses the Flags key to test whether the issuer of the certificate is known. The include statement in the first line enables this script to use the named flag ceUnrecognizedIssuer.</P>

<PRE><CODE>&lt;!--#include file="cervbs.inc" --&gt;
&lt;%
  If Request.ClientCertificate("Flags") and ceUnrecognizedIssuer then
    Response.Write "Unrecognized issuer"
  End If
%&gt;
 </CODE></PRE>

<H6>Applies To</H6>

<P><A HREF="/iishelp/iis/htm/asp/vbob5ulw.htm"><B>Request</B> Object</A> </P>

<H6>See Also</H6>

<P><A HREF="/iishelp/iis/htm/asp/vbob0z3o.htm"><B>Cookies</B></A>, <A HREF="/iishelp/iis/htm/asp/vbob4fl9.htm"><B>Form</B></A>, <A HREF="/iishelp/iis/htm/asp/vbob53hj.htm"><B>QueryString</B></A>, <A HREF="/iishelp/iis/htm/asp/vbob5vsj.htm"><B>ServerVariables</B></A> </P>
<hr class="iis" size="1">
<p align="center"><em><a href="../../../common/colegal.htm">&copy; 1997-1999 Microsoft Corporation. All rights reserved.</a></em></p>
</BODY>
</HTML>
